// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v5.29.3
// source: extractor.proto

package custom

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Format int32

const (
	Format_FORMAT_TEXT  Format = 0
	Format_FORMAT_IMAGE Format = 1
	Format_FORMAT_PDF   Format = 2
)

// Enum value maps for Format.
var (
	Format_name = map[int32]string{
		0: "FORMAT_TEXT",
		1: "FORMAT_IMAGE",
		2: "FORMAT_PDF",
	}
	Format_value = map[string]int32{
		"FORMAT_TEXT":  0,
		"FORMAT_IMAGE": 1,
		"FORMAT_PDF":   2,
	}
)

func (x Format) Enum() *Format {
	p := new(Format)
	*p = x
	return p
}

func (x Format) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Format) Descriptor() protoreflect.EnumDescriptor {
	return file_extractor_proto_enumTypes[0].Descriptor()
}

func (Format) Type() protoreflect.EnumType {
	return &file_extractor_proto_enumTypes[0]
}

func (x Format) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Format.Descriptor instead.
func (Format) EnumDescriptor() ([]byte, []int) {
	return file_extractor_proto_rawDescGZIP(), []int{0}
}

type ExtractRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	File          *File                  `protobuf:"bytes,1,opt,name=file,proto3,oneof" json:"file,omitempty"`
	Url           *string                `protobuf:"bytes,2,opt,name=url,proto3,oneof" json:"url,omitempty"`
	Format        *Format                `protobuf:"varint,3,opt,name=format,proto3,enum=extractor.Format,oneof" json:"format,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ExtractRequest) Reset() {
	*x = ExtractRequest{}
	mi := &file_extractor_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ExtractRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExtractRequest) ProtoMessage() {}

func (x *ExtractRequest) ProtoReflect() protoreflect.Message {
	mi := &file_extractor_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExtractRequest.ProtoReflect.Descriptor instead.
func (*ExtractRequest) Descriptor() ([]byte, []int) {
	return file_extractor_proto_rawDescGZIP(), []int{0}
}

func (x *ExtractRequest) GetFile() *File {
	if x != nil {
		return x.File
	}
	return nil
}

func (x *ExtractRequest) GetUrl() string {
	if x != nil && x.Url != nil {
		return *x.Url
	}
	return ""
}

func (x *ExtractRequest) GetFormat() Format {
	if x != nil && x.Format != nil {
		return *x.Format
	}
	return Format_FORMAT_TEXT
}

type File struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Name          string                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Content       []byte                 `protobuf:"bytes,2,opt,name=content,proto3" json:"content,omitempty"`
	ContentType   string                 `protobuf:"bytes,3,opt,name=content_type,json=contentType,proto3" json:"content_type,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *File) Reset() {
	*x = File{}
	mi := &file_extractor_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *File) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*File) ProtoMessage() {}

func (x *File) ProtoReflect() protoreflect.Message {
	mi := &file_extractor_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use File.ProtoReflect.Descriptor instead.
func (*File) Descriptor() ([]byte, []int) {
	return file_extractor_proto_rawDescGZIP(), []int{1}
}

func (x *File) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *File) GetContent() []byte {
	if x != nil {
		return x.Content
	}
	return nil
}

func (x *File) GetContentType() string {
	if x != nil {
		return x.ContentType
	}
	return ""
}

var File_extractor_proto protoreflect.FileDescriptor

const file_extractor_proto_rawDesc = "" +
	"\n" +
	"\x0fextractor.proto\x12\textractor\"\x9d\x01\n" +
	"\x0eExtractRequest\x12(\n" +
	"\x04file\x18\x01 \x01(\v2\x0f.extractor.FileH\x00R\x04file\x88\x01\x01\x12\x15\n" +
	"\x03url\x18\x02 \x01(\tH\x01R\x03url\x88\x01\x01\x12.\n" +
	"\x06format\x18\x03 \x01(\x0e2\x11.extractor.FormatH\x02R\x06format\x88\x01\x01B\a\n" +
	"\x05_fileB\x06\n" +
	"\x04_urlB\t\n" +
	"\a_format\"W\n" +
	"\x04File\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x12\x18\n" +
	"\acontent\x18\x02 \x01(\fR\acontent\x12!\n" +
	"\fcontent_type\x18\x03 \x01(\tR\vcontentType*;\n" +
	"\x06Format\x12\x0f\n" +
	"\vFORMAT_TEXT\x10\x00\x12\x10\n" +
	"\fFORMAT_IMAGE\x10\x01\x12\x0e\n" +
	"\n" +
	"FORMAT_PDF\x10\x022D\n" +
	"\tExtractor\x127\n" +
	"\aExtract\x12\x19.extractor.ExtractRequest\x1a\x0f.extractor.File\"\x00B>Z<github.com/adrianliechti/wingman/pkg/extractor/custom;customb\x06proto3"

var (
	file_extractor_proto_rawDescOnce sync.Once
	file_extractor_proto_rawDescData []byte
)

func file_extractor_proto_rawDescGZIP() []byte {
	file_extractor_proto_rawDescOnce.Do(func() {
		file_extractor_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_extractor_proto_rawDesc), len(file_extractor_proto_rawDesc)))
	})
	return file_extractor_proto_rawDescData
}

var file_extractor_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_extractor_proto_msgTypes = make([]protoimpl.MessageInfo, 2)
var file_extractor_proto_goTypes = []any{
	(Format)(0),            // 0: extractor.Format
	(*ExtractRequest)(nil), // 1: extractor.ExtractRequest
	(*File)(nil),           // 2: extractor.File
}
var file_extractor_proto_depIdxs = []int32{
	2, // 0: extractor.ExtractRequest.file:type_name -> extractor.File
	0, // 1: extractor.ExtractRequest.format:type_name -> extractor.Format
	1, // 2: extractor.Extractor.Extract:input_type -> extractor.ExtractRequest
	2, // 3: extractor.Extractor.Extract:output_type -> extractor.File
	3, // [3:4] is the sub-list for method output_type
	2, // [2:3] is the sub-list for method input_type
	2, // [2:2] is the sub-list for extension type_name
	2, // [2:2] is the sub-list for extension extendee
	0, // [0:2] is the sub-list for field type_name
}

func init() { file_extractor_proto_init() }
func file_extractor_proto_init() {
	if File_extractor_proto != nil {
		return
	}
	file_extractor_proto_msgTypes[0].OneofWrappers = []any{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_extractor_proto_rawDesc), len(file_extractor_proto_rawDesc)),
			NumEnums:      1,
			NumMessages:   2,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_extractor_proto_goTypes,
		DependencyIndexes: file_extractor_proto_depIdxs,
		EnumInfos:         file_extractor_proto_enumTypes,
		MessageInfos:      file_extractor_proto_msgTypes,
	}.Build()
	File_extractor_proto = out.File
	file_extractor_proto_goTypes = nil
	file_extractor_proto_depIdxs = nil
}
